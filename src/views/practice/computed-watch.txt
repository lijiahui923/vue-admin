/**
* computed计算结果并返回，只有当计算的值发生改变时才会触发（同步）
* （即：计算属性的结果会被缓存，除非依赖的响应式属性变化才会重新计算）
* 通过几个数据来影响一个数据
*/
/**
* watch 监听某一个值，当被监听的值发生变化时执行对应的操作（异步）
* （与computed的区别是，watch更加适用于监听某一个值的变化并做对应的操作，比如请求后台接口等，而computed适用于计算已有的值并返回结果）
* immediate: true 初始化时就会先执行一遍该监听对应的操作
* deep: true 当被监听的值是对象，只有deep为true时，对应属性的值(例如：obj.a)发生变化时才能触发监听事件，但是这样非常消耗性能
* 监听对象具体的属性，deep久不行呀设置为true了
* 一个数据的变化来影响多个数据
* 'obj.a':{
*  handler () {}
* }
* 注意：不要在computed和watch中修改被依赖（或者被监听）的值，这样可能会导致无限循环
*/